{
  "AlarmClockService": {
    "Description": "Control the sonos alarms",
    "File": "alarm-clock.service.ts",
    "Methods": {
      "CreateAlarm": {
        "Description": "Create a single alarm, all properties are required",
        "Params": {
          "StartLocalTime": "The starttime as hh:mm:ss",
          "Duration": "The duration as hh:mm:ss",
          "Recurrence": "Repeat this alarm on",
          "Enabled": "Alarm enabled after creation",
          "RoomUUID": "The UUID of the speaker you want this alarm for",
          "ProgramURI": "The sound uri",
          "ProgramMetaData": "The sound metadata, can be empty string",
          "PlayMode": "Alarm playmode",
          "Volume": "Volume between 0 and 100",
          "IncludeLinkedZones": "Should grouped palyers also play the alarm?"
        }
      },
      "DestroyAlarm": {
        "Description": "Delete an alarm",
        "Params": {
          "ID": "The Alarm ID, see ListAndParseAlarms"
        }
      },
      "ListAlarms": {
        "Description": "Get the AlarmList as XML, use ListAndParseAlarms for parsed version"
      },
      "UpdateAlarm": {
        "Description": "Update an alarm, all parameters are required. Use PatchAlarm where you can update a single parameter",
        "Params": {
          "ID": "The ID of the alarm see ListAndParseAlarms",
          "StartLocalTime": "The starttime as hh:mm:ss",
          "Duration": "The duration as hh:mm:ss",
          "Recurrence": "Repeat this alarm on",
          "Enabled": "Alarm enabled after creation",
          "RoomUUID": "The UUID of the speaker you want this alarm for",
          "ProgramURI": "The sound uri",
          "ProgramMetaData": "The sound metadata, can be empty string",
          "PlayMode": "Alarm playmode",
          "Volume": "Volume between 0 and 100",
          "IncludeLinkedZones": "Should grouped palyers also play the alarm?"
        }
      }
    }
  },
  "AudioInService": {
    "Description": "",
    "File": "audio-in.service.ts"
  },
  "AVTransportService": {
    "Description": "Service that controls stuff related to transport (play/pause/next/special urls)",
    "File": "av-transport.service.ts",
    "Methods": {
      "BecomeCoordinatorOfStandaloneGroup": {
        "Description": "Leave the current group and revert to a single player."
      },
      "SnoozeAlarm": {
        "Description": "Snooze the current alarm for some time.",
        "Params": {
          "Duration": "Snooze time as hh:mm:ss, 10 minutes = 00:10:00"
        }
      },
      "Stop": {
        "Description": "Stop playback"
      }
    }
  },
  "ConnectionManagerService": {
    "Description": "",
    "File": "connection-manager.service.ts"
  },
  "ContentDirectoryService": {
    "Description": "Browse for local content",
    "File": "content-directory.service.ts"
  },
  "DevicePropertiesService": {
    "Description": "Modify device properties, like led status and stereo pairs",
    "File": "device-properties.service.ts"
  },
  "GroupManagementService": {
    "Description": "",
    "File": "group-management.service.ts"
  },
  "GroupRenderingControlService": {
    "Description": "Volume related controls for groups",
    "File": "group-rendering-control.service.ts"
  },
  "MusicServicesService": {
    "Description": "External music services",
    "File": "music-services.service.ts"
  },
  "QPlayService": {
    "Description": "",
    "File": "q-play.service.ts"
  },
  "QueueService": {
    "Description": "Modify and browse queues",
    "File": "queue.service.ts"
  },
  "RenderingControlService": {
    "Description": "Volume related controls",
    "File": "rendering-control.service.ts"
  },
  "SystemPropertiesService": {
    "Description": "",
    "File": "system-properties.service.ts"
  },
  "VirtualLineInService": {
    "Description": "",
    "File": "virtual-line-in.service.ts"
  },
  "ZoneGroupTopologyService": {
    "Description": "Zone config stuff, eg getting all the configured sonos zones.",
    "File": "zone-group-topology.service.ts"
  }
}